// DynamicWizardSkript
// Author:	A&D AS RD 21, Siemens AG
// Links the selected WinCC object (must be an SFC Control) to an SFC.

#include "dynamic.h"
#include "language.h"

#pragma code("pdlcsapi.dll")
#include "pdlcsapi.h"
#pragma code()
#pragma option(mbcs)

#ifndef LB_ADDSTRING
#define LB_ADDSTRING    0x0180
#endif

#ifndef LB_SETCURSEL
#define LB_SETCURSEL    0x0186
#endif

#pragma code("sfccli.dll")
#include "sfccli.h"
#pragma code()

#define XGAP     15
#define YGAP     5

#define PropSammelrelevant	"Relevant"
#define PropSammelwert		"CollectValue"

DECLARE_WIZARD_FOR_OCX

BEGIN_PROPERTY_SCHEME
{ "Uebersicht" },	// bitte nicht uebersetzen / do not translate
END_PROPERTY_SCHEME

BEGIN_DYNAMICS
	{
		SFC_TABNAME,
		SFC_Name3,
		NULL,
		"Pcs7.bmp",
		SFC_Name4,
		{ "OnOption1", NULL, NULL, },
		"OnGenerate",
		"OnShowGenerateInfo",
		{ 
			{ NULL, NULL },
		},
	},
END_DYNAMICS

DECLARE_JCR_TRIGGERS

char g_ProjectFile[512];
char g_ProjectPath[512];
char g_Picture[256];
char g_CtrlObjectName[256];

char g_PlannameAlt[256] = "";
char g_TagnameAlt[256] = "";

char g_PlannameNeu[256] = "";
char g_TagnameNeu[256] = "";

BOOL g_Overview = FALSE;
BOOL g_Section = FALSE;

int g_SelIndex =0;
long g_lnull = 0;


void getOldNameAndView()
{
	BOOL rc = FALSE;
	unsigned short* pBstr =0;
	CMN_ERROR _cmnError;

	g_PlannameAlt[0] = '\0';

// alten Plannamen lesen:
	rc = PDLCSGetPropertyEx(  g_ProjectFile
					, g_Picture
					, g_CtrlObjectName
					, "SfcPlan" // nicht übersetzen / do not translate!!
					, VT_BSTR
					, (LPVOID)&pBstr
					, 0
					, (LPVOID)pBstr
					, &_cmnError);
	if (rc)	
	{
		SFCFreeBstr((unsigned short*)pBstr, g_PlannameAlt);

		if (g_PlannameAlt[0] && _mbscmp((unsigned char *)g_PlannameAlt, (unsigned char *)" ###### "))	// alter Name gesetzt:
		{
// alte Kennung 'Übersicht' lesen:
			rc = PDLCSGetPropertyEx(  g_ProjectFile
							, g_Picture
							, g_CtrlObjectName
							, "Uebersicht" // nicht übersetzen / do not translate!!
							, VT_BOOL
							, (LPVOID)&g_Overview 
							, 0
							, (LPVOID)NULL
							, (PCMN_ERROR)NULL);


			if( g_Overview )	
				g_Section = FALSE;
			else
				g_Section = TRUE;
		}
		else	
			g_PlannameAlt[0] = '\0';
	}
}


BOOL ValidateOption1()
{
	// check entered chartname for existance
	// return TRUE, if the values are correct

//	return SFCIsChartExisting(g_PlannameNeu);
	return ( g_PlannameNeu[0] != '\0' && g_PlannameNeu[0] != '*' );

} // ValidateOption1

void OnOption1(void)
{
	HWND hWnd;
	RECT rect; 
	char *p;

	SetValidateFct("ValidateOption1");

	memset(g_ProjectFile ,0, 255);
	sprintf(g_ProjectFile, GetProjectName());
	sprintf(g_ProjectPath, g_ProjectFile);
	p = (char *) _mbsrchr((unsigned char *)g_ProjectPath, '\\');
	if (p)
		*p = 0;
	
	memset(g_Picture, 0, 255);
	sprintf(g_Picture, GetPictureName());

	memset(g_CtrlObjectName, 0, 255);
	sprintf(g_CtrlObjectName, GetObjectName());

	if( ValidateOption1() == FALSE )
	{
		getOldNameAndView();
		_mbscpy((unsigned char *)g_PlannameNeu, (unsigned char *)g_PlannameAlt);
	}
//	MessageBox(NULL, g_ProjectPath, "SFCOpenChart", MB_OK);

	CreateStatic(0,30,TEXT_SFC_08);
    	hWnd=CreatePackageBrowserEx(0,50,"CSFCAso.CSFCAso.1",g_PlannameNeu);
	GetWindowRect(GetParent(hWnd), &rect);
	MoveWindow(hWnd, 0, 50, (rect.right - rect.left), 20, TRUE);

	CreateStatic(0,90,TEXT_SFC_09);
	hWnd = CreateRadioButton( 20, 110, TEXT_SFC_13, &g_Overview );
	hWnd = CreateRadioButton( 20, 130, TEXT_SFC_14, &g_Section );

} // OnOption1


void OnShowGenerateInfo(HWND hEdit)
{
	char *fmt = TEXT_SFC_10
	             "    %s\r\n"
				 TEXT_SFC_11
	             "    %s.\r\n"
				 "\r\n"
				 TEXT_SFC_12
	             "    \"%s\".\r\n"
				 ;
	
	char ButtonText[256]= "";
	char text[400];
	int n;

	if( g_Overview == TRUE )
	{
		strcpy( ButtonText, TEXT_SFC_13 );
	}
	else if( g_Section == TRUE )
	{
		strcpy( ButtonText, TEXT_SFC_14 );
	}

	sprintf(text, fmt, g_CtrlObjectName, g_PlannameNeu, ButtonText);

	SetWindowText(hEdit, text);
} // OnShowGenerateInfo

void OnGenerate(void)
{
	LINK_INFO lpLink;
	CMN_ERROR _cmnError;
	BOOL rc = FALSE;
	int n;
	unsigned short* pBstr =0;
	BOOL  bUbs = FALSE;
	char* pChar = 0;

	// neue Kennung 'Übersicht' setzen:
	rc = PDLCSSetPropertyEx(  g_ProjectFile
					, g_Picture
					, g_CtrlObjectName
					, "Uebersicht" // nicht übersetzen / do not translate!!
					, VT_BOOL
					, (LPVOID)&g_Overview
					, 0
					, (LPVOID)NULL
					, (PCMN_ERROR)NULL);

	if (!rc)	MessageBox(NULL, TEXT_SFC_15, TEXT_SFC_16, MB_OK);
	
	// neuen Plannamen setzen:
	pBstr = SFCAllocBstr(g_PlannameNeu);

	rc = PDLCSSetPropertyEx(  g_ProjectFile
					, g_Picture
					, g_CtrlObjectName
					, "SfcPlan" // nicht übersetzen / do not translate!!
					, VT_BSTR
					, (LPVOID)&pBstr
					, 0
					, (LPVOID)pBstr
					, &_cmnError);

	if (!rc)	MessageBox(NULL, _cmnError.szErrorText, TEXT_SFC_17, MB_OK);

	// alten Tagnamen holen:
	rc = PDLCSGetPropertyEx(  g_ProjectFile
        						, g_Picture
        						, g_CtrlObjectName
        						, "tagname"
								, VT_BSTR
								, (LPVOID)&pBstr
								, 0
								, (LPVOID)NULL
                				, (PCMN_ERROR)NULL);

	if (rc)	
	{
		SFCFreeBstr((unsigned short*)pBstr, g_TagnameAlt);
	}
	else	MessageBox(NULL,TEXT_SFC_15,TEXT_SFC_18 , MB_OK);

	// neuen Tagnamen setzen:
	_mbscpy((unsigned char *)g_TagnameNeu,(unsigned char *) g_PlannameNeu);
	pBstr = SFCAllocBstr(g_TagnameNeu);

	rc = PDLCSSetPropertyEx(  g_ProjectFile
        						, g_Picture
        						, g_CtrlObjectName
        						, "tagname"
								, VT_BSTR
								, (LPVOID)&pBstr
								, 0
								, (LPVOID)pBstr
                				, &_cmnError);

	if (!rc)	MessageBox(NULL, _cmnError.szErrorText,TEXT_SFC_19 , MB_OK);


// CollectValue is only used to be compatible with older projects. 
// From Version 5 on it is NO MORE NECESSARY! WinCC is using "tagname"
// if CollectValue is not linked to a tag to handle the "Sammelanzeige".
// WinCC adds the suffix ".EventState" to the tagname to e.g.
// "sfcplan1.EventState".									- FraMue
// Just to see what was going on in the past ... here is the old CollectValue code:

// alten Link löschen, falls Tagname geändert:
	if (g_TagnameAlt[0]
 		&& _mbscmp((unsigned char *)g_TagnameAlt, (unsigned char *)g_TagnameNeu))
	{
		lpLink.enumLinkType = BUBRT_LT_VARIABLE_DIRECT;
		lpLink.dwCycle = 0;

		_mbscpy((unsigned char *)lpLink.szLinkName, (unsigned char *)g_TagnameAlt);
		rc = PDLCSRemoveLink( g_ProjectFile
        						, g_Picture
        						, g_CtrlObjectName
        						, PropSammelwert
        	        			, &lpLink
                 				, &_cmnError);

		if (!rc)	MessageBox(NULL, _cmnError.szErrorText,"PDLCSRemoveLink - Error" , MB_OK);
	}

 	PDLCSSetPropertyEx(g_ProjectFile,g_Picture,g_CtrlObjectName,"CollectValue",VT_I4,&g_lnull,0,NULL,&_cmnError);
} // OnGenerate